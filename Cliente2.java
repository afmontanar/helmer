/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mecanics;

import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import utilities.ValidarCamposVacios;


/**
 *
 * @author adicnet
 */
public class Cliente2 extends javax.swing.JDialog {
    
    private utilities.ModelosTablaU modelot;
    private ValidarCamposVacios objectv;
    private Random dado= new Random();
    private ArrayList<String> numerosGenerados;
    /**
     * Creates new form Cliente
     */
    public Cliente2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        Component[] components = {numero1,numero4};
        Component[] componentst = {numero1,numero3,numero4};
        this.objectv = new utilities.ValidarCamposVacios(components,componentst);
        String n[] = {"Identificacion","Nombres","Apellidos","Direccion","Celular","Detalle"};
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        numero3 = new javax.swing.JTextField();
        numero4 = new javax.swing.JTextField();
        numero1 = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        numero2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Numeros");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        numero3.setBorder(javax.swing.BorderFactory.createTitledBorder("Apellido"));
        numero3.setName("Apellido");
        jPanel1.add(numero3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 180, 40));

        numero4.setBorder(javax.swing.BorderFactory.createTitledBorder("Apodo"));
        numero4.setName("Apodo");
        jPanel1.add(numero4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 180, 40));

        numero1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));

        numero1.setName("Nombre"); // NOI18N
        jPanel1.add(numero1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 180, 40));

        jToggleButton1.setText("Guardar");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        numero1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));

        numero1.setName("Nombre"); // NOI18N
        jPanel1.add(numero2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 180, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        int[] numeros = new int[4];
        int[] copia = new int[4];
        
        
        // TODO add your handling code here:
        int pongaLosCeros = this.pongaLosCeros();
        numeros[0]=Integer.parseInt(numero1.getText());
        numeros[1]=Integer.parseInt(numero2.getText());
        numeros[2]=Integer.parseInt(numero3.getText());
        numeros[3]=Integer.parseInt(numero4.getText());
        copia[0]=Integer.parseInt(numero1.getText());
        copia[1]=Integer.parseInt(numero2.getText());
        copia[2]=Integer.parseInt(numero3.getText());
        copia[3]=Integer.parseInt(numero4.getText());
        
//        this.calculeCombinaciones(numeros, copia);
        this.calculeCombinacionesX(numeros,copia,pongaLosCeros);
        for(int i=0;i<this.numerosGenerados.size();i++){
            System.out.println(numerosGenerados.get(i));
        }
        
//        System.out.println(numero1.getText()+numero2.getText()+numero3.getText()+numero4.getText());
//        int parseInt = Integer.parseInt(numero1.getText()+numero2.getText()+numero3.getText()+numero4.getText());
//        System.out.println(parseInt);
//        for(;parseInt<10000;parseInt++){
//            System.out.println(parseInt);
//        }
//        this.calculeCombinaciones(copia);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField numero1;
    private javax.swing.JTextField numero2;
    private javax.swing.JTextField numero3;
    private javax.swing.JTextField numero4;
    // End of variables declaration//GEN-END:variables

    private boolean validarG() {
        if(objectv.validacionCamposNulosB()){
            if(this.existeU()){
                return true;
            }  
            return false;
        }else{
            return false;
        }
    }

    private void guardarC() {      
//        try {
//            //NewMain.o.EjecutarMysql("INSERT INTO `mecanics`.`cliente` (`TipoIdentificacion`, `primeroNombre`, `segunNombre`, `primeroApellido`, `segundoApellido`, `numeroId`, `direccion`, `celular`, `detalles`) VALUES ('"+this.nombre1.getText()+"', '"+this.nombre2.getText()+"', '"+this.apellido1.getText()+"', '', '"+this.NumeroId.getText()+"', '"+this.Celular.getText()+"', '"+this.detalles.getText()+"')");            
//        } catch (SQLException ex) {
//            Logger.getLogger(Cliente2.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void guardar() {
        this.guardarC();
        this.guardarCC();   
    }

    private void guardarCC() {
        List<Object[]> usuarios = this.modelot.getUsuarios();
        for(int i=0; i<usuarios.size();i++){
            Object[] get = usuarios.get(i);
//       try {
//            NewMain.o.EjecutarMysql("INSERT INTO `mecanics`.`chofer` (`Identificacion`, `Nombres`, `Apellidos`, `Direccion`, `Celular`, `Detalle`, `clienteid`) VALUES ('"+get[0]+"', '"+get[1]+"', '"+get[2]+"', '"+get[3]+"', '"+get[4]+"', '"+get[5]+"', '"+this.NumeroId.getText()+"')");            
//        } catch (SQLException ex) {
//            Logger.getLogger(Cliente2.class.getName()).log(Level.SEVERE, null, ex);
//        } 
        }
    }

    private boolean existeU() {
//        try {
//            ResultSet MysqlConsulta = NewMain.o.MysqlConsulta("SELECT * FROM  `cliente` WHERE  `numeroId` LIKE  '"+this.NumeroId.getText()+"'");
//            if(MysqlConsulta.next()){
//                JOptionPane.showMessageDialog(this, "Este cliente ya existe");
//                return false;
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(Cliente2.class.getName()).log(Level.SEVERE, null, ex);
//        }
        return true;
    }

    private void limpiar() {
        this.objectv.reiniciarFormularior();
        this.modelot.vaciarTabla();
    }

    private int pongaLosCeros() {
        int contador=0;
        if(!numero1.getText().equals("")){
           
        }else{
            numero1.setText("0");
            contador=+1;
        }
        if(!numero2.getText().equals("")){
               
            }else{
                numero2.setText("0");
                contador=+1;
        }
         if(!numero3.getText().equals("")){
                    
                }else{
             contador=+1;
                    numero3.setText("0");
                }
         if(!numero4.getText().equals("")){
                        
                    }else{
                    contador=+1;
                        numero4.setText("0");
                    }
         return contador;
    }

    private void calculeCombinaciones(int[] numeros, int []copia) {
        boolean kill=false;
        if(numeros[0]==0){
//            int n=this.dado.nextInt(10);

            for(int i=0;i<10;i++){
            copia[0]=i;
            
            if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el segundo bloque                
                if(numeros[1]==0){
                    for(int x=0;x<10;x++){
                        copia[1]=x;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el tercer bloque
                        if(numeros[2]==0){
                    for(int y=0;y<10;y++){
                        copia[2]=y;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el cuarto bloque
                      if(numeros[3]==0){
                    for(int z=0;z<10;z++){
                        copia[3]=z;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
                    }
                }
                    kill=true;
            }
            }
        }
    }
    }}}}}}
        //segundo caso
    if(numeros[1]==0 && kill==false){
//            int n=this.dado.nextInt(10);

            for(int i=0;i<10;i++){
            copia[0]=i;
            
            if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el segundo bloque                
                if(numeros[1]==0){
                    for(int x=0;x<10;x++){
                        copia[1]=x;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el tercer bloque
                        if(numeros[2]==0){
                    for(int y=0;y<10;y++){
                        copia[2]=y;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el cuarto bloque
                      if(numeros[3]==0){
                    for(int z=0;z<10;z++){
                        copia[3]=z;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
                    }
                }
            }
            }
        }
    }
    }}}}}}
//tercer caso
    if(numeros[2]==0 && kill==false){
//            int n=this.dado.nextInt(10);

            for(int i=0;i<10;i++){
            copia[0]=i;
            
            if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el segundo bloque                
                if(numeros[1]==0){
                    for(int x=0;x<10;x++){
                        copia[1]=x;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el tercer bloque
                        if(numeros[2]==0){
                    for(int y=0;y<10;y++){
                        copia[2]=y;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el cuarto bloque
                      if(numeros[3]==0){
                    for(int z=0;z<10;z++){
                        copia[3]=z;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
                    }
                }
            }
            }
        }
    }
    }}}}}}
//cuarto caso
    if(numeros[3]==0 && kill==false){
//            int n=this.dado.nextInt(10);

            for(int i=0;i<10;i++){
            copia[0]=i;
            
            if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el segundo bloque                
                if(numeros[1]==0){
                    for(int x=0;x<10;x++){
                        copia[1]=x;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el tercer bloque
                        if(numeros[2]==0){
                    for(int y=0;y<10;y++){
                        copia[2]=y;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
//valida el cuarto bloque
                      if(numeros[3]==0){
                    for(int z=0;z<10;z++){
                        copia[3]=z;
                        if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
                            this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);
                    }
                }
            }
            }
        }
    }
    }}}}}}
}
    private int calcularFactorial(int n){
        int ifactorial=1;
        while(n>1){
            ifactorial*=n;
            n--;
        }
        return ifactorial;
    }
    
    private int calcularCombinaciones(int n, int k){
        int N = calcularFactorial(n);
        int K = calcularFactorial(k);
        return calcularFactorial(n+k-1)/calcularFactorial(n-1);
    }

    private void calculeCombinacionesX(int[] numeros, int[] copia, int estudiantescomensales) {
        int calcularCombinaciones = calcularCombinaciones(10, estudiantescomensales);
        int [][] todosLosNumeros = new int[calcularCombinaciones][4];
        int i,j,num;
        
//            int n=this.dado.nextInt(10);
        int[] delceroalnueve = {0,1,2,3,4,5,6,7,8,9};
            for (i = 0, num=0; i < calcularCombinaciones; i++) {
            for (j = 0; j < 4; j++) {
                if(numeros[0]!=0){
                    todosLosNumeros[i][j] = numeros[0];
                    j=1;
                    break;}
                if(numeros[1]!=0){
                    todosLosNumeros[i][j] = numeros[1];
                    j=2;
                    break;}
                if(numeros[2]!=0){
                    todosLosNumeros[i][j] = numeros[2];
                    j=3;
                    break;}
                if(numeros[3]!=0){
                    todosLosNumeros[i][j] = numeros[3];
                    j=4;
                    break;}
                System.out.print("A[" + i + "][" + j + "]= ");
                todosLosNumeros[i][j] = num;
                
                if(num==9){num=0;}
                num++;
                
            }
        }
            System.out.println("valores introducidos:");
        for (i = 0; i < todosLosNumeros.length; i++) { 
            for (j = 0; j < todosLosNumeros[i].length; j++) {
                System.out.print(todosLosNumeros[i][j] + " ");
            }
            System.out.println();
        }
//            for(int i=0;i<10;i++){
//            copia[0]=i;
////                if(!this.numerosGenerados.contains(copia[0]+""+copia[1]+""+copia[2]+""+copia[3])){
//                    this.numerosGenerados.add(copia[0]+""+copia[1]+""+copia[2]+""+copia[3]);}
                }
        }
    
    
        
           
